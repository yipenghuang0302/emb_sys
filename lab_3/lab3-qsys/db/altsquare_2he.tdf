--altsquare CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DATA_WIDTH=12 DEVICE_FAMILY="Cyclone V" PIPELINE=2 REPRESENTATION="SIGNED" RESULT_WIDTH=24 clock data result
--VERSION_BEGIN 13.1 cbx_altsquare 2014:02:12:20:59:45:SJ cbx_cycloneii 2014:02:12:20:59:46:SJ cbx_lpm_add_sub 2014:02:12:20:59:46:SJ cbx_mgl 2014:02:12:21:04:28:SJ cbx_padd 2014:02:12:20:59:46:SJ cbx_stratix 2014:02:12:20:59:46:SJ cbx_stratixii 2014:02:12:20:59:46:SJ cbx_util_mgl 2014:02:12:20:59:46:SJ  VERSION_END


-- Copyright (C) 1991-2014 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.


FUNCTION soft (in)
RETURNS ( out);

--synthesis_resources = lut 86 reg 86 
OPTIONS ALTERA_INTERNAL_OPTION = "{-to dffe10} POWER_UP_LEVEL=LOW;{-to dffe11} POWER_UP_LEVEL=LOW;{-to dffe12} POWER_UP_LEVEL=LOW;{-to dffe13} POWER_UP_LEVEL=LOW;{-to dffe14} POWER_UP_LEVEL=LOW;{-to dffe15} POWER_UP_LEVEL=LOW;{-to dffe16} POWER_UP_LEVEL=LOW;{-to dffe17} POWER_UP_LEVEL=LOW;{-to dffe18} POWER_UP_LEVEL=LOW;{-to dffe19} POWER_UP_LEVEL=LOW;{-to dffe2} POWER_UP_LEVEL=LOW;{-to dffe20} POWER_UP_LEVEL=LOW;{-to dffe21} POWER_UP_LEVEL=LOW;{-to dffe22} POWER_UP_LEVEL=LOW;{-to dffe23} POWER_UP_LEVEL=LOW;{-to dffe24} POWER_UP_LEVEL=LOW;{-to dffe25} POWER_UP_LEVEL=LOW;{-to dffe26} POWER_UP_LEVEL=LOW;{-to dffe27} POWER_UP_LEVEL=LOW;{-to dffe28} POWER_UP_LEVEL=LOW;{-to dffe29} POWER_UP_LEVEL=LOW;{-to dffe3} POWER_UP_LEVEL=LOW;{-to dffe30} POWER_UP_LEVEL=LOW;{-to dffe31} POWER_UP_LEVEL=LOW;{-to dffe32} POWER_UP_LEVEL=LOW;{-to dffe33} POWER_UP_LEVEL=LOW;{-to dffe34} POWER_UP_LEVEL=LOW;{-to dffe35} POWER_UP_LEVEL=LOW;{-to dffe36} POWER_UP_LEVEL=LOW;{-to dffe37} POWER_UP_LEVEL=LOW;{-to dffe38} POWER_UP_LEVEL=LOW;{-to dffe39} POWER_UP_LEVEL=LOW;{-to dffe4} POWER_UP_LEVEL=LOW;{-to dffe40} POWER_UP_LEVEL=LOW;{-to dffe41} POWER_UP_LEVEL=LOW;{-to dffe42} POWER_UP_LEVEL=LOW;{-to dffe43} POWER_UP_LEVEL=LOW;{-to dffe44} POWER_UP_LEVEL=LOW;{-to dffe45} POWER_UP_LEVEL=LOW;{-to dffe46} POWER_UP_LEVEL=LOW;{-to dffe47} POWER_UP_LEVEL=LOW;{-to dffe48} POWER_UP_LEVEL=LOW;{-to dffe49} POWER_UP_LEVEL=LOW;{-to dffe5} POWER_UP_LEVEL=LOW;{-to dffe50} POWER_UP_LEVEL=LOW;{-to dffe51} POWER_UP_LEVEL=LOW;{-to dffe52} POWER_UP_LEVEL=LOW;{-to dffe53} POWER_UP_LEVEL=LOW;{-to dffe54} POWER_UP_LEVEL=LOW;{-to dffe55} POWER_UP_LEVEL=LOW;{-to dffe56} POWER_UP_LEVEL=LOW;{-to dffe57} POWER_UP_LEVEL=LOW";
OPTIONS ALTERA_INTERNAL_OPTION = "{-to dffe58} POWER_UP_LEVEL=LOW;{-to dffe59} POWER_UP_LEVEL=LOW;{-to dffe6} POWER_UP_LEVEL=LOW;{-to dffe60} POWER_UP_LEVEL=LOW;{-to dffe61} POWER_UP_LEVEL=LOW;{-to dffe62} POWER_UP_LEVEL=LOW;{-to dffe63} POWER_UP_LEVEL=LOW;{-to dffe64} POWER_UP_LEVEL=LOW;{-to dffe65} POWER_UP_LEVEL=LOW;{-to dffe66} POWER_UP_LEVEL=LOW;{-to dffe67} POWER_UP_LEVEL=LOW;{-to dffe68} POWER_UP_LEVEL=LOW;{-to dffe69} POWER_UP_LEVEL=LOW;{-to dffe7} POWER_UP_LEVEL=LOW;{-to dffe70} POWER_UP_LEVEL=LOW;{-to dffe71} POWER_UP_LEVEL=LOW;{-to dffe72} POWER_UP_LEVEL=LOW;{-to dffe73} POWER_UP_LEVEL=LOW;{-to dffe74} POWER_UP_LEVEL=LOW;{-to dffe75} POWER_UP_LEVEL=LOW;{-to dffe76} POWER_UP_LEVEL=LOW;{-to dffe77} POWER_UP_LEVEL=LOW;{-to dffe78} POWER_UP_LEVEL=LOW;{-to dffe79} POWER_UP_LEVEL=LOW;{-to dffe8} POWER_UP_LEVEL=LOW;{-to dffe80} POWER_UP_LEVEL=LOW;{-to dffe81} POWER_UP_LEVEL=LOW;{-to dffe82} POWER_UP_LEVEL=LOW;{-to dffe83} POWER_UP_LEVEL=LOW;{-to dffe84} POWER_UP_LEVEL=LOW;{-to dffe85} POWER_UP_LEVEL=LOW;{-to dffe9} POWER_UP_LEVEL=LOW";

SUBDESIGN altsquare_2he
( 
	clock	:	input;
	data[11..0]	:	input;
	result[23..0]	:	output;
) 
VARIABLE
	add86_result[22..0]	:	WIRE;
	add91_result[13..0]	:	WIRE;
	add96_result[5..0]	:	WIRE;
	dffe10 : dffe
		WITH (
			power_up = "low"
		);
	dffe11 : dffe
		WITH (
			power_up = "low"
		);
	dffe12 : dffe
		WITH (
			power_up = "low"
		);
	dffe13 : dffe
		WITH (
			power_up = "low"
		);
	dffe14 : dffe
		WITH (
			power_up = "low"
		);
	dffe15 : dffe
		WITH (
			power_up = "low"
		);
	dffe16 : dffe
		WITH (
			power_up = "low"
		);
	dffe17 : dffe
		WITH (
			power_up = "low"
		);
	dffe18 : dffe
		WITH (
			power_up = "low"
		);
	dffe19 : dffe
		WITH (
			power_up = "low"
		);
	dffe1a[1..0] : dffe;
	dffe2 : dffe
		WITH (
			power_up = "low"
		);
	dffe20 : dffe
		WITH (
			power_up = "low"
		);
	dffe21 : dffe
		WITH (
			power_up = "low"
		);
	dffe22 : dffe
		WITH (
			power_up = "low"
		);
	dffe23 : dffe
		WITH (
			power_up = "low"
		);
	dffe24 : dffe
		WITH (
			power_up = "low"
		);
	dffe25 : dffe
		WITH (
			power_up = "low"
		);
	dffe26 : dffe
		WITH (
			power_up = "low"
		);
	dffe27 : dffe
		WITH (
			power_up = "low"
		);
	dffe28 : dffe
		WITH (
			power_up = "low"
		);
	dffe29 : dffe
		WITH (
			power_up = "low"
		);
	dffe3 : dffe
		WITH (
			power_up = "low"
		);
	dffe30 : dffe
		WITH (
			power_up = "low"
		);
	dffe31 : dffe
		WITH (
			power_up = "low"
		);
	dffe32 : dffe
		WITH (
			power_up = "low"
		);
	dffe33 : dffe
		WITH (
			power_up = "low"
		);
	dffe34 : dffe
		WITH (
			power_up = "low"
		);
	dffe35 : dffe
		WITH (
			power_up = "low"
		);
	dffe36 : dffe
		WITH (
			power_up = "low"
		);
	dffe37 : dffe
		WITH (
			power_up = "low"
		);
	dffe38 : dffe
		WITH (
			power_up = "low"
		);
	dffe39 : dffe
		WITH (
			power_up = "low"
		);
	dffe4 : dffe
		WITH (
			power_up = "low"
		);
	dffe40 : dffe
		WITH (
			power_up = "low"
		);
	dffe41 : dffe
		WITH (
			power_up = "low"
		);
	dffe42 : dffe
		WITH (
			power_up = "low"
		);
	dffe43 : dffe
		WITH (
			power_up = "low"
		);
	dffe44 : dffe
		WITH (
			power_up = "low"
		);
	dffe45 : dffe
		WITH (
			power_up = "low"
		);
	dffe46 : dffe
		WITH (
			power_up = "low"
		);
	dffe47 : dffe
		WITH (
			power_up = "low"
		);
	dffe48 : dffe
		WITH (
			power_up = "low"
		);
	dffe49 : dffe
		WITH (
			power_up = "low"
		);
	dffe5 : dffe
		WITH (
			power_up = "low"
		);
	dffe50 : dffe
		WITH (
			power_up = "low"
		);
	dffe51 : dffe
		WITH (
			power_up = "low"
		);
	dffe52 : dffe
		WITH (
			power_up = "low"
		);
	dffe53 : dffe
		WITH (
			power_up = "low"
		);
	dffe54 : dffe
		WITH (
			power_up = "low"
		);
	dffe55 : dffe
		WITH (
			power_up = "low"
		);
	dffe56 : dffe
		WITH (
			power_up = "low"
		);
	dffe57 : dffe
		WITH (
			power_up = "low"
		);
	dffe58 : dffe
		WITH (
			power_up = "low"
		);
	dffe59 : dffe
		WITH (
			power_up = "low"
		);
	dffe6 : dffe
		WITH (
			power_up = "low"
		);
	dffe60 : dffe
		WITH (
			power_up = "low"
		);
	dffe61 : dffe
		WITH (
			power_up = "low"
		);
	dffe62 : dffe
		WITH (
			power_up = "low"
		);
	dffe63 : dffe
		WITH (
			power_up = "low"
		);
	dffe64 : dffe
		WITH (
			power_up = "low"
		);
	dffe65 : dffe
		WITH (
			power_up = "low"
		);
	dffe66 : dffe
		WITH (
			power_up = "low"
		);
	dffe67 : dffe
		WITH (
			power_up = "low"
		);
	dffe68 : dffe
		WITH (
			power_up = "low"
		);
	dffe69 : dffe
		WITH (
			power_up = "low"
		);
	dffe7 : dffe
		WITH (
			power_up = "low"
		);
	dffe70 : dffe
		WITH (
			power_up = "low"
		);
	dffe71 : dffe
		WITH (
			power_up = "low"
		);
	dffe72 : dffe
		WITH (
			power_up = "low"
		);
	dffe73 : dffe
		WITH (
			power_up = "low"
		);
	dffe74 : dffe
		WITH (
			power_up = "low"
		);
	dffe75 : dffe
		WITH (
			power_up = "low"
		);
	dffe76 : dffe
		WITH (
			power_up = "low"
		);
	dffe77 : dffe
		WITH (
			power_up = "low"
		);
	dffe78 : dffe
		WITH (
			power_up = "low"
		);
	dffe79 : dffe
		WITH (
			power_up = "low"
		);
	dffe8 : dffe
		WITH (
			power_up = "low"
		);
	dffe80 : dffe
		WITH (
			power_up = "low"
		);
	dffe81 : dffe
		WITH (
			power_up = "low"
		);
	dffe82 : dffe
		WITH (
			power_up = "low"
		);
	dffe83 : dffe
		WITH (
			power_up = "low"
		);
	dffe84 : dffe
		WITH (
			power_up = "low"
		);
	dffe85 : dffe
		WITH (
			power_up = "low"
		);
	dffe9 : dffe
		WITH (
			power_up = "low"
		);
	sft100a[5..0] : soft;
	sft87a[22..0] : soft;
	sft88a[22..0] : soft;
	sft89a[22..0] : soft;
	sft90a[22..0] : soft;
	sft92a[13..0] : soft;
	sft93a[13..0] : soft;
	sft94a[13..0] : soft;
	sft95a[13..0] : soft;
	sft97a[5..0] : soft;
	sft98a[5..0] : soft;
	sft99a[5..0] : soft;
	aclr	: NODE;
	ena	: NODE;
	w100w[0..0]	: WIRE;
	w103w[0..0]	: WIRE;
	w108w[0..0]	: WIRE;
	w112w[0..0]	: WIRE;
	w116w[0..0]	: WIRE;
	w120w[0..0]	: WIRE;
	w124w[0..0]	: WIRE;
	w127w[0..0]	: WIRE;
	w12w[0..0]	: WIRE;
	w130w[0..0]	: WIRE;
	w133w[0..0]	: WIRE;
	w138w[0..0]	: WIRE;
	w142w[0..0]	: WIRE;
	w146w[0..0]	: WIRE;
	w149w[0..0]	: WIRE;
	w153w[0..0]	: WIRE;
	w157w[0..0]	: WIRE;
	w160w[0..0]	: WIRE;
	w163w[0..0]	: WIRE;
	w166w[0..0]	: WIRE;
	w16w[0..0]	: WIRE;
	w171w[0..0]	: WIRE;
	w175w[0..0]	: WIRE;
	w179w[0..0]	: WIRE;
	w182w[0..0]	: WIRE;
	w185w[0..0]	: WIRE;
	w189w[0..0]	: WIRE;
	w193w[0..0]	: WIRE;
	w196w[0..0]	: WIRE;
	w199w[0..0]	: WIRE;
	w202w[0..0]	: WIRE;
	w207w[0..0]	: WIRE;
	w20w[0..0]	: WIRE;
	w211w[0..0]	: WIRE;
	w215w[0..0]	: WIRE;
	w219w[0..0]	: WIRE;
	w222w[0..0]	: WIRE;
	w225w[0..0]	: WIRE;
	w229w[0..0]	: WIRE;
	w233w[0..0]	: WIRE;
	w236w[0..0]	: WIRE;
	w239w[0..0]	: WIRE;
	w242w[0..0]	: WIRE;
	w247w[0..0]	: WIRE;
	w251w[0..0]	: WIRE;
	w255w[0..0]	: WIRE;
	w25w[0..0]	: WIRE;
	w260w[0..0]	: WIRE;
	w265w[0..0]	: WIRE;
	w269w[0..0]	: WIRE;
	w273w[0..0]	: WIRE;
	w278w[0..0]	: WIRE;
	w283w[0..0]	: WIRE;
	w287w[0..0]	: WIRE;
	w291w[0..0]	: WIRE;
	w295w[0..0]	: WIRE;
	w29w[0..0]	: WIRE;
	w301w[0..0]	: WIRE;
	w303w	: WIRE;
	w313w	: WIRE;
	w33w[0..0]	: WIRE;
	w36w[0..0]	: WIRE;
	w41w[0..0]	: WIRE;
	w45w[0..0]	: WIRE;
	w477w[25..0]	: WIRE;
	w49w[0..0]	: WIRE;
	w52w[0..0]	: WIRE;
	w55w[0..0]	: WIRE;
	w60w[0..0]	: WIRE;
	w64w[0..0]	: WIRE;
	w68w[0..0]	: WIRE;
	w71w[0..0]	: WIRE;
	w74w[0..0]	: WIRE;
	w77w[0..0]	: WIRE;
	w82w[0..0]	: WIRE;
	w86w[0..0]	: WIRE;
	w90w[0..0]	: WIRE;
	w94w[0..0]	: WIRE;
	w97w[0..0]	: WIRE;

BEGIN 
	add86_result[] = sft87a[].out + sft88a[].out + sft89a[].out;
	add91_result[] = sft92a[].out + sft93a[].out + sft94a[].out;
	add96_result[] = sft97a[].out + sft98a[].out + sft99a[].out;
	dffe10.clk = clock;
	dffe10.clrn = (! aclr);
	dffe10.d = sft90a[2..2].out;
	dffe10.ena = ena;
	dffe11.clk = clock;
	dffe11.clrn = (! aclr);
	dffe11.d = w29w[0..0];
	dffe11.ena = ena;
	dffe12.clk = clock;
	dffe12.clrn = (! aclr);
	dffe12.d = w36w[0..0];
	dffe12.ena = ena;
	dffe13.clk = clock;
	dffe13.clrn = (! aclr);
	dffe13.d = w49w[0..0];
	dffe13.ena = ena;
	dffe14.clk = clock;
	dffe14.clrn = (! aclr);
	dffe14.d = sft90a[3..3].out;
	dffe14.ena = ena;
	dffe15.clk = clock;
	dffe15.clrn = (! aclr);
	dffe15.d = w41w[0..0];
	dffe15.ena = ena;
	dffe16.clk = clock;
	dffe16.clrn = (! aclr);
	dffe16.d = w52w[0..0];
	dffe16.ena = ena;
	dffe17.clk = clock;
	dffe17.clrn = (! aclr);
	dffe17.d = w68w[0..0];
	dffe17.ena = ena;
	dffe18.clk = clock;
	dffe18.clrn = (! aclr);
	dffe18.d = sft90a[4..4].out;
	dffe18.ena = ena;
	dffe19.clk = clock;
	dffe19.clrn = (! aclr);
	dffe19.d = w45w[0..0];
	dffe19.ena = ena;
	dffe1a[].clk = clock;
	dffe1a[].clrn = (! aclr);
	dffe1a[].d = ( dffe1a[0].q, data[0..0]);
	dffe1a[].ena = ena;
	dffe2.clk = clock;
	dffe2.clrn = (! aclr);
	dffe2.d = dffe3.q;
	dffe2.ena = ena;
	dffe20.clk = clock;
	dffe20.clrn = (! aclr);
	dffe20.d = w55w[0..0];
	dffe20.ena = ena;
	dffe21.clk = clock;
	dffe21.clrn = (! aclr);
	dffe21.d = sft95a[0..0].out;
	dffe21.ena = ena;
	dffe22.clk = clock;
	dffe22.clrn = (! aclr);
	dffe22.d = sft90a[5..5].out;
	dffe22.ena = ena;
	dffe23.clk = clock;
	dffe23.clrn = (! aclr);
	dffe23.d = w60w[0..0];
	dffe23.ena = ena;
	dffe24.clk = clock;
	dffe24.clrn = (! aclr);
	dffe24.d = w74w[0..0];
	dffe24.ena = ena;
	dffe25.clk = clock;
	dffe25.clrn = (! aclr);
	dffe25.d = sft95a[1..1].out;
	dffe25.ena = ena;
	dffe26.clk = clock;
	dffe26.clrn = (! aclr);
	dffe26.d = sft90a[6..6].out;
	dffe26.ena = ena;
	dffe27.clk = clock;
	dffe27.clrn = (! aclr);
	dffe27.d = w64w[0..0];
	dffe27.ena = ena;
	dffe28.clk = clock;
	dffe28.clrn = (! aclr);
	dffe28.d = w77w[0..0];
	dffe28.ena = ena;
	dffe29.clk = clock;
	dffe29.clrn = (! aclr);
	dffe29.d = sft95a[2..2].out;
	dffe29.ena = ena;
	dffe3.clk = clock;
	dffe3.clrn = (! aclr);
	dffe3.d = w12w[0..0];
	dffe3.ena = ena;
	dffe30.clk = clock;
	dffe30.clrn = (! aclr);
	dffe30.d = sft90a[7..7].out;
	dffe30.ena = ena;
	dffe31.clk = clock;
	dffe31.clrn = (! aclr);
	dffe31.d = w82w[0..0];
	dffe31.ena = ena;
	dffe32.clk = clock;
	dffe32.clrn = (! aclr);
	dffe32.d = w100w[0..0];
	dffe32.ena = ena;
	dffe33.clk = clock;
	dffe33.clrn = (! aclr);
	dffe33.d = sft95a[3..3].out;
	dffe33.ena = ena;
	dffe34.clk = clock;
	dffe34.clrn = (! aclr);
	dffe34.d = sft90a[8..8].out;
	dffe34.ena = ena;
	dffe35.clk = clock;
	dffe35.clrn = (! aclr);
	dffe35.d = w86w[0..0];
	dffe35.ena = ena;
	dffe36.clk = clock;
	dffe36.clrn = (! aclr);
	dffe36.d = sft95a[4..4].out;
	dffe36.ena = ena;
	dffe37.clk = clock;
	dffe37.clrn = (! aclr);
	dffe37.d = sft100a[0..0].out;
	dffe37.ena = ena;
	dffe38.clk = clock;
	dffe38.clrn = (! aclr);
	dffe38.d = sft90a[9..9].out;
	dffe38.ena = ena;
	dffe39.clk = clock;
	dffe39.clrn = (! aclr);
	dffe39.d = w108w[0..0];
	dffe39.ena = ena;
	dffe4.clk = clock;
	dffe4.clrn = (! aclr);
	dffe4.d = sft90a[0..0].out;
	dffe4.ena = ena;
	dffe40.clk = clock;
	dffe40.clrn = (! aclr);
	dffe40.d = sft95a[5..5].out;
	dffe40.ena = ena;
	dffe41.clk = clock;
	dffe41.clrn = (! aclr);
	dffe41.d = sft100a[1..1].out;
	dffe41.ena = ena;
	dffe42.clk = clock;
	dffe42.clrn = (! aclr);
	dffe42.d = sft90a[10..10].out;
	dffe42.ena = ena;
	dffe43.clk = clock;
	dffe43.clrn = (! aclr);
	dffe43.d = w112w[0..0];
	dffe43.ena = ena;
	dffe44.clk = clock;
	dffe44.clrn = (! aclr);
	dffe44.d = sft95a[6..6].out;
	dffe44.ena = ena;
	dffe45.clk = clock;
	dffe45.clrn = (! aclr);
	dffe45.d = sft100a[2..2].out;
	dffe45.ena = ena;
	dffe46.clk = clock;
	dffe46.clrn = (! aclr);
	dffe46.d = sft90a[11..11].out;
	dffe46.ena = ena;
	dffe47.clk = clock;
	dffe47.clrn = (! aclr);
	dffe47.d = w163w[0..0];
	dffe47.ena = ena;
	dffe48.clk = clock;
	dffe48.clrn = (! aclr);
	dffe48.d = sft95a[7..7].out;
	dffe48.ena = ena;
	dffe49.clk = clock;
	dffe49.clrn = (! aclr);
	dffe49.d = sft100a[3..3].out;
	dffe49.ena = ena;
	dffe5.clk = clock;
	dffe5.clrn = (! aclr);
	dffe5.d = w16w[0..0];
	dffe5.ena = ena;
	dffe50.clk = clock;
	dffe50.clrn = (! aclr);
	dffe50.d = sft90a[12..12].out;
	dffe50.ena = ena;
	dffe51.clk = clock;
	dffe51.clrn = (! aclr);
	dffe51.d = w166w[0..0];
	dffe51.ena = ena;
	dffe52.clk = clock;
	dffe52.clrn = (! aclr);
	dffe52.d = sft95a[8..8].out;
	dffe52.ena = ena;
	dffe53.clk = clock;
	dffe53.clrn = (! aclr);
	dffe53.d = sft100a[4..4].out;
	dffe53.ena = ena;
	dffe54.clk = clock;
	dffe54.clrn = (! aclr);
	dffe54.d = sft90a[13..13].out;
	dffe54.ena = ena;
	dffe55.clk = clock;
	dffe55.clrn = (! aclr);
	dffe55.d = w199w[0..0];
	dffe55.ena = ena;
	dffe56.clk = clock;
	dffe56.clrn = (! aclr);
	dffe56.d = sft95a[9..9].out;
	dffe56.ena = ena;
	dffe57.clk = clock;
	dffe57.clrn = (! aclr);
	dffe57.d = sft100a[5..5].out;
	dffe57.ena = ena;
	dffe58.clk = clock;
	dffe58.clrn = (! aclr);
	dffe58.d = sft90a[14..14].out;
	dffe58.ena = ena;
	dffe59.clk = clock;
	dffe59.clrn = (! aclr);
	dffe59.d = w175w[0..0];
	dffe59.ena = ena;
	dffe6.clk = clock;
	dffe6.clrn = (! aclr);
	dffe6.d = w20w[0..0];
	dffe6.ena = ena;
	dffe60.clk = clock;
	dffe60.clrn = (! aclr);
	dffe60.d = w202w[0..0];
	dffe60.ena = ena;
	dffe61.clk = clock;
	dffe61.clrn = (! aclr);
	dffe61.d = sft95a[10..10].out;
	dffe61.ena = ena;
	dffe62.clk = clock;
	dffe62.clrn = (! aclr);
	dffe62.d = sft90a[15..15].out;
	dffe62.ena = ena;
	dffe63.clk = clock;
	dffe63.clrn = (! aclr);
	dffe63.d = (! w283w[0..0]);
	dffe63.ena = ena;
	dffe64.clk = clock;
	dffe64.clrn = (! aclr);
	dffe64.d = w239w[0..0];
	dffe64.ena = ena;
	dffe65.clk = clock;
	dffe65.clrn = (! aclr);
	dffe65.d = sft95a[11..11].out;
	dffe65.ena = ena;
	dffe66.clk = clock;
	dffe66.clrn = (! aclr);
	dffe66.d = sft90a[16..16].out;
	dffe66.ena = ena;
	dffe67.clk = clock;
	dffe67.clrn = (! aclr);
	dffe67.d = (! w287w[0..0]);
	dffe67.ena = ena;
	dffe68.clk = clock;
	dffe68.clrn = (! aclr);
	dffe68.d = w242w[0..0];
	dffe68.ena = ena;
	dffe69.clk = clock;
	dffe69.clrn = (! aclr);
	dffe69.d = sft95a[12..12].out;
	dffe69.ena = ena;
	dffe7.clk = clock;
	dffe7.clrn = (! aclr);
	dffe7.d = sft90a[1..1].out;
	dffe7.ena = ena;
	dffe70.clk = clock;
	dffe70.clrn = (! aclr);
	dffe70.d = sft90a[17..17].out;
	dffe70.ena = ena;
	dffe71.clk = clock;
	dffe71.clrn = (! aclr);
	dffe71.d = w247w[0..0];
	dffe71.ena = ena;
	dffe72.clk = clock;
	dffe72.clrn = (! aclr);
	dffe72.d = (! w291w[0..0]);
	dffe72.ena = ena;
	dffe73.clk = clock;
	dffe73.clrn = (! aclr);
	dffe73.d = sft95a[13..13].out;
	dffe73.ena = ena;
	dffe74.clk = clock;
	dffe74.clrn = (! aclr);
	dffe74.d = sft90a[18..18].out;
	dffe74.ena = ena;
	dffe75.clk = clock;
	dffe75.clrn = (! aclr);
	dffe75.d = w251w[0..0];
	dffe75.ena = ena;
	dffe76.clk = clock;
	dffe76.clrn = (! aclr);
	dffe76.d = (! w295w[0..0]);
	dffe76.ena = ena;
	dffe77.clk = clock;
	dffe77.clrn = (! aclr);
	dffe77.d = sft90a[19..19].out;
	dffe77.ena = ena;
	dffe78.clk = clock;
	dffe78.clrn = (! aclr);
	dffe78.d = w301w[0..0];
	dffe78.ena = ena;
	dffe79.clk = clock;
	dffe79.clrn = (! aclr);
	dffe79.d = B"1";
	dffe79.ena = ena;
	dffe8.clk = clock;
	dffe8.clrn = (! aclr);
	dffe8.d = w25w[0..0];
	dffe8.ena = ena;
	dffe80.clk = clock;
	dffe80.clrn = (! aclr);
	dffe80.d = sft90a[20..20].out;
	dffe80.ena = ena;
	dffe81.clk = clock;
	dffe81.clrn = (! aclr);
	dffe81.d = B"1";
	dffe81.ena = ena;
	dffe82.clk = clock;
	dffe82.clrn = (! aclr);
	dffe82.d = sft90a[21..21].out;
	dffe82.ena = ena;
	dffe83.clk = clock;
	dffe83.clrn = (! aclr);
	dffe83.d = B"1";
	dffe83.ena = ena;
	dffe84.clk = clock;
	dffe84.clrn = (! aclr);
	dffe84.d = sft90a[22..22].out;
	dffe84.ena = ena;
	dffe85.clk = clock;
	dffe85.clrn = (! aclr);
	dffe85.d = B"1";
	dffe85.ena = ena;
	dffe9.clk = clock;
	dffe9.clrn = (! aclr);
	dffe9.d = w33w[0..0];
	dffe9.ena = ena;
	sft100a[].in = add96_result[];
	sft87a[].in = ( dffe85.q, ( dffe83.q, ( dffe81.q, ( dffe78.q, ( dffe75.q, ( dffe71.q, ( dffe67.q, ( dffe63.q, ( dffe59.q, ( dffe55.q, ( dffe51.q, ( dffe47.q, ( dffe43.q, ( dffe39.q, ( dffe35.q, ( dffe31.q, ( dffe27.q, ( dffe23.q, ( dffe19.q, ( dffe15.q, ( dffe11.q, ( dffe8.q, dffe5.q))))))))))))))))))))));
	sft88a[].in = ( w313w, ( w313w, ( w313w, ( dffe79.q, ( dffe76.q, ( dffe72.q, ( dffe68.q, ( dffe64.q, ( dffe60.q, ( dffe56.q, ( dffe52.q, ( dffe48.q, ( dffe44.q, ( dffe40.q, ( dffe36.q, ( dffe32.q, ( dffe28.q, ( dffe24.q, ( dffe20.q, ( dffe16.q, ( dffe12.q, ( dffe9.q, dffe6.q))))))))))))))))))))));
	sft89a[].in = ( w313w, ( w313w, ( w313w, ( w313w, ( w313w, ( dffe73.q, ( dffe69.q, ( dffe65.q, ( dffe61.q, ( dffe57.q, ( dffe53.q, ( dffe49.q, ( dffe45.q, ( dffe41.q, ( dffe37.q, ( dffe33.q, ( dffe29.q, ( dffe25.q, ( dffe21.q, ( dffe17.q, ( dffe13.q, ( w313w, w313w))))))))))))))))))))));
	sft90a[].in = add86_result[];
	sft92a[].in = ( w313w, ( w211w[0..0], ( w207w[0..0], ( (! w278w[0..0]), ( (! w273w[0..0]), ( w229w[0..0], ( w225w[0..0], ( w189w[0..0], ( w185w[0..0], ( w153w[0..0], ( w149w[0..0], ( w120w[0..0], ( w116w[0..0], w90w[0..0])))))))))))));
	sft93a[].in = ( w313w, ( w313w, ( w313w, ( w236w[0..0], ( w233w[0..0], ( w196w[0..0], ( w193w[0..0], ( w160w[0..0], ( w157w[0..0], ( w127w[0..0], ( w124w[0..0], ( w97w[0..0], ( w94w[0..0], w71w[0..0])))))))))))));
	sft94a[].in = ( w313w, ( w313w, ( w313w, ( w313w, ( w171w[0..0], ( (! w269w[0..0]), ( (! w265w[0..0]), ( w222w[0..0], ( w219w[0..0], ( w182w[0..0], ( w179w[0..0], ( w146w[0..0], ( w313w, w313w)))))))))))));
	sft95a[].in = add91_result[];
	sft97a[].in = ( w313w, ( w142w[0..0], ( w138w[0..0], ( (! w260w[0..0]), ( (! w255w[0..0]), w215w[0..0])))));
	sft98a[].in = ( w313w, ( w313w, ( w313w, ( w133w[0..0], ( w130w[0..0], w103w[0..0])))));
	sft99a[].in = ( w313w, ( w313w, ( w313w, ( w313w, ( w303w, w313w)))));
	aclr = GND;
	ena = VCC;
	result[] = ( w477w[23..2], B"0", dffe1a[1].q);
	w100w[] = (data[6..6] & data[3..3]);
	w103w[] = (data[6..6] & data[4..4]);
	w108w[] = (data[6..6] & (! data[5..5]));
	w112w[] = (data[6..6] & data[5..5]);
	w116w[] = (data[7..7] & data[0..0]);
	w120w[] = (data[7..7] & data[1..1]);
	w124w[] = (data[7..7] & data[2..2]);
	w127w[] = (data[7..7] & data[3..3]);
	w12w[] = (data[1..1] & (! data[0..0]));
	w130w[] = (data[7..7] & data[4..4]);
	w133w[] = (data[7..7] & data[5..5]);
	w138w[] = (data[7..7] & (! data[6..6]));
	w142w[] = (data[7..7] & data[6..6]);
	w146w[] = (data[8..8] & data[0..0]);
	w149w[] = (data[8..8] & data[1..1]);
	w153w[] = (data[8..8] & data[2..2]);
	w157w[] = (data[8..8] & data[3..3]);
	w160w[] = (data[8..8] & data[4..4]);
	w163w[] = (data[8..8] & data[5..5]);
	w166w[] = (data[8..8] & data[6..6]);
	w16w[] = (data[1..1] & data[0..0]);
	w171w[] = (data[8..8] & (! data[7..7]));
	w175w[] = (data[8..8] & data[7..7]);
	w179w[] = (data[9..9] & data[0..0]);
	w182w[] = (data[9..9] & data[1..1]);
	w185w[] = (data[9..9] & data[2..2]);
	w189w[] = (data[9..9] & data[3..3]);
	w193w[] = (data[9..9] & data[4..4]);
	w196w[] = (data[9..9] & data[5..5]);
	w199w[] = (data[9..9] & data[6..6]);
	w202w[] = (data[9..9] & data[7..7]);
	w207w[] = (data[9..9] & (! data[8..8]));
	w20w[] = (data[2..2] & data[0..0]);
	w211w[] = (data[9..9] & data[8..8]);
	w215w[] = (data[10..10] & data[0..0]);
	w219w[] = (data[10..10] & data[1..1]);
	w222w[] = (data[10..10] & data[2..2]);
	w225w[] = (data[10..10] & data[3..3]);
	w229w[] = (data[10..10] & data[4..4]);
	w233w[] = (data[10..10] & data[5..5]);
	w236w[] = (data[10..10] & data[6..6]);
	w239w[] = (data[10..10] & data[7..7]);
	w242w[] = (data[10..10] & data[8..8]);
	w247w[] = (data[10..10] & (! data[9..9]));
	w251w[] = (data[10..10] & data[9..9]);
	w255w[] = (data[11..11] & data[0..0]);
	w25w[] = (data[2..2] & (! data[1..1]));
	w260w[] = (data[11..11] & data[1..1]);
	w265w[] = (data[11..11] & data[2..2]);
	w269w[] = (data[11..11] & data[3..3]);
	w273w[] = (data[11..11] & data[4..4]);
	w278w[] = (data[11..11] & data[5..5]);
	w283w[] = (data[11..11] & data[6..6]);
	w287w[] = (data[11..11] & data[7..7]);
	w291w[] = (data[11..11] & data[8..8]);
	w295w[] = (data[11..11] & data[9..9]);
	w29w[] = (data[2..2] & data[1..1]);
	w301w[] = (data[11..11] & (! data[10..10]));
	w303w = B"1";
	w313w = B"0";
	w33w[] = (data[3..3] & data[0..0]);
	w36w[] = (data[3..3] & data[1..1]);
	w41w[] = (data[3..3] & (! data[2..2]));
	w45w[] = (data[3..3] & data[2..2]);
	w477w[] = ( dffe84.q, dffe82.q, dffe80.q, dffe77.q, dffe74.q, dffe70.q, dffe66.q, dffe62.q, dffe58.q, dffe54.q, dffe50.q, dffe46.q, dffe42.q, dffe38.q, dffe34.q, dffe30.q, dffe26.q, dffe22.q, dffe18.q, dffe14.q, dffe10.q, dffe7.q, dffe4.q, dffe2.q, w313w, w313w);
	w49w[] = (data[4..4] & data[0..0]);
	w52w[] = (data[4..4] & data[1..1]);
	w55w[] = (data[4..4] & data[2..2]);
	w60w[] = (data[4..4] & (! data[3..3]));
	w64w[] = (data[4..4] & data[3..3]);
	w68w[] = (data[5..5] & data[0..0]);
	w71w[] = (data[5..5] & data[1..1]);
	w74w[] = (data[5..5] & data[2..2]);
	w77w[] = (data[5..5] & data[3..3]);
	w82w[] = (data[5..5] & (! data[4..4]));
	w86w[] = (data[5..5] & data[4..4]);
	w90w[] = (data[6..6] & data[0..0]);
	w94w[] = (data[6..6] & data[1..1]);
	w97w[] = (data[6..6] & data[2..2]);
END;
--VALID FILE
